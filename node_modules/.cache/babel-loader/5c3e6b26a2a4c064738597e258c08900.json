{"ast":null,"code":"import { SEARCHING_ITEMS, SEARCHING_ITEMS_SUCCESS, SEARCHING_ITEMS_FAILED, SEARCHING_ITEM_DETAIL, SEARCHING_ITEM_DETAIL_SUCCESS, SEARCHING_ITEM_DETAIL_FAILED } from \"../types\";\nimport client from \"../config/client\"; //Buscar items\n\nexport function searchItemsAction(searchTxt) {\n  return dispatch => {\n    dispatch(searchItems(searchTxt));\n\n    try {\n      client.get(`/api/items?search=${searchTxt}`).then(resp => {\n        dispatch(searchItemsSuccess(resp.data));\n      }).catch(error => {\n        dispatch(searchItemsFailed(\"Ocurrió un error, intenta nuevamente. \" + error.message));\n      });\n    } catch (error) {\n      //console.log(error)\n      dispatch(searchItemsFailed(\"Ocurrió un error, intenta nuevamente.\" + error));\n    }\n  };\n}\n\nconst searchItems = searchTxt => ({\n  type: SEARCHING_ITEMS,\n  payload: searchTxt\n});\n\nconst searchItemsSuccess = arrItems => ({\n  type: SEARCHING_ITEMS_SUCCESS,\n  payload: arrItems\n});\n\nconst searchItemsFailed = msgerror => ({\n  type: SEARCHING_ITEMS_FAILED,\n  payload: msgerror\n}); //Detalles de un item\n\n\nexport function searchItemDetailsAction(id) {\n  return dispatch => {\n    dispatch(searchItemDetails());\n\n    try {\n      client.get(`/api/items/${id}`).then(resp => {\n        dispatch(searchItemDetailsSuccess(resp.data));\n      });\n    } catch (error) {\n      dispatch(searchItemDetailsFailed(\"Ocurrió un error al obtener el artículo, intenta nuevamente.\"));\n    }\n  };\n}\n\nconst searchItemDetails = () => ({\n  type: SEARCHING_ITEM_DETAIL\n});\n\nconst searchItemDetailsSuccess = itemDetail => ({\n  type: SEARCHING_ITEM_DETAIL_SUCCESS,\n  payload: itemDetail\n});\n\nconst searchItemDetailsFailed = msgerror => ({\n  type: SEARCHING_ITEM_DETAIL_FAILED,\n  payload: msgerror\n});","map":{"version":3,"sources":["/Users/gilberto/projects/meli-challenge/front/src/actions/itemsAction.js"],"names":["SEARCHING_ITEMS","SEARCHING_ITEMS_SUCCESS","SEARCHING_ITEMS_FAILED","SEARCHING_ITEM_DETAIL","SEARCHING_ITEM_DETAIL_SUCCESS","SEARCHING_ITEM_DETAIL_FAILED","client","searchItemsAction","searchTxt","dispatch","searchItems","get","then","resp","searchItemsSuccess","data","catch","error","searchItemsFailed","message","type","payload","arrItems","msgerror","searchItemDetailsAction","id","searchItemDetails","searchItemDetailsSuccess","searchItemDetailsFailed","itemDetail"],"mappings":"AAAA,SACCA,eADD,EAECC,uBAFD,EAGCC,sBAHD,EAICC,qBAJD,EAKCC,6BALD,EAMCC,4BAND,QAOO,UAPP;AAQA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,SAA3B,EAAsC;AAC5C,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACC,WAAW,CAACF,SAAD,CAAZ,CAAR;;AAEA,QAAI;AACHF,MAAAA,MAAM,CACJK,GADF,CACO,qBAAoBH,SAAU,EADrC,EAEEI,IAFF,CAEQC,IAAD,IAAU;AACfJ,QAAAA,QAAQ,CAACK,kBAAkB,CAACD,IAAI,CAACE,IAAN,CAAnB,CAAR;AACA,OAJF,EAKEC,KALF,CAKSC,KAAD,IAAW;AACjBR,QAAAA,QAAQ,CAACS,iBAAiB,CAAC,2CAAyCD,KAAK,CAACE,OAAhD,CAAlB,CAAR;AACA,OAPF;AAQA,KATD,CASE,OAAOF,KAAP,EAAc;AACf;AACAR,MAAAA,QAAQ,CAACS,iBAAiB,CAAC,0CAAwCD,KAAzC,CAAlB,CAAR;AACA;AACD,GAhBD;AAiBA;;AAED,MAAMP,WAAW,GAAIF,SAAD,KAAgB;AACnCY,EAAAA,IAAI,EAAEpB,eAD6B;AAEnCqB,EAAAA,OAAO,EAAEb;AAF0B,CAAhB,CAApB;;AAKA,MAAMM,kBAAkB,GAAIQ,QAAD,KAAe;AACzCF,EAAAA,IAAI,EAAEnB,uBADmC;AAEzCoB,EAAAA,OAAO,EAAEC;AAFgC,CAAf,CAA3B;;AAKA,MAAMJ,iBAAiB,GAAIK,QAAD,KAAe;AACxCH,EAAAA,IAAI,EAAElB,sBADkC;AAExCmB,EAAAA,OAAO,EAAEE;AAF+B,CAAf,CAA1B,C,CAKA;;;AACA,OAAO,SAASC,uBAAT,CAAiCC,EAAjC,EAAqC;AAC3C,SAAQhB,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACiB,iBAAiB,EAAlB,CAAR;;AACA,QAAI;AACHpB,MAAAA,MAAM,CAACK,GAAP,CAAY,cAAac,EAAG,EAA5B,EAA+Bb,IAA/B,CAAqCC,IAAD,IAAU;AAC7CJ,QAAAA,QAAQ,CAACkB,wBAAwB,CAACd,IAAI,CAACE,IAAN,CAAzB,CAAR;AACA,OAFD;AAGA,KAJD,CAIE,OAAOE,KAAP,EAAc;AACfR,MAAAA,QAAQ,CACPmB,uBAAuB,CACtB,8DADsB,CADhB,CAAR;AAKA;AACD,GAbD;AAcA;;AAED,MAAMF,iBAAiB,GAAG,OAAO;AAChCN,EAAAA,IAAI,EAAEjB;AAD0B,CAAP,CAA1B;;AAIA,MAAMwB,wBAAwB,GAAIE,UAAD,KAAiB;AACjDT,EAAAA,IAAI,EAAEhB,6BAD2C;AAEjDiB,EAAAA,OAAO,EAAEQ;AAFwC,CAAjB,CAAjC;;AAKA,MAAMD,uBAAuB,GAAIL,QAAD,KAAe;AAC9CH,EAAAA,IAAI,EAAEf,4BADwC;AAE9CgB,EAAAA,OAAO,EAAEE;AAFqC,CAAf,CAAhC","sourcesContent":["import {\n\tSEARCHING_ITEMS,\n\tSEARCHING_ITEMS_SUCCESS,\n\tSEARCHING_ITEMS_FAILED,\n\tSEARCHING_ITEM_DETAIL,\n\tSEARCHING_ITEM_DETAIL_SUCCESS,\n\tSEARCHING_ITEM_DETAIL_FAILED,\n} from \"../types\";\nimport client from \"../config/client\";\n\n//Buscar items\nexport function searchItemsAction(searchTxt) {\n\treturn (dispatch) => {\n\t\tdispatch(searchItems(searchTxt));\n\n\t\ttry {\n\t\t\tclient\n\t\t\t\t.get(`/api/items?search=${searchTxt}`)\n\t\t\t\t.then((resp) => {\n\t\t\t\t\tdispatch(searchItemsSuccess(resp.data));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tdispatch(searchItemsFailed(\"Ocurrió un error, intenta nuevamente. \"+error.message));\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\t//console.log(error)\n\t\t\tdispatch(searchItemsFailed(\"Ocurrió un error, intenta nuevamente.\"+error));\n\t\t}\n\t};\n}\n\nconst searchItems = (searchTxt) => ({\n\ttype: SEARCHING_ITEMS,\n\tpayload: searchTxt,\n});\n\nconst searchItemsSuccess = (arrItems) => ({\n\ttype: SEARCHING_ITEMS_SUCCESS,\n\tpayload: arrItems,\n});\n\nconst searchItemsFailed = (msgerror) => ({\n\ttype: SEARCHING_ITEMS_FAILED,\n\tpayload: msgerror,\n});\n\n//Detalles de un item\nexport function searchItemDetailsAction(id) {\n\treturn (dispatch) => {\n\t\tdispatch(searchItemDetails());\n\t\ttry {\n\t\t\tclient.get(`/api/items/${id}`).then((resp) => {\n\t\t\t\tdispatch(searchItemDetailsSuccess(resp.data));\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatch(\n\t\t\t\tsearchItemDetailsFailed(\n\t\t\t\t\t\"Ocurrió un error al obtener el artículo, intenta nuevamente.\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t};\n}\n\nconst searchItemDetails = () => ({\n\ttype: SEARCHING_ITEM_DETAIL,\n});\n\nconst searchItemDetailsSuccess = (itemDetail) => ({\n\ttype: SEARCHING_ITEM_DETAIL_SUCCESS,\n\tpayload: itemDetail,\n});\n\nconst searchItemDetailsFailed = (msgerror) => ({\n\ttype: SEARCHING_ITEM_DETAIL_FAILED,\n\tpayload: msgerror,\n});\n"]},"metadata":{},"sourceType":"module"}